<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="2" ignored="0" total="25" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="11569" started-at="2023-05-01T20:22:23 EET" finished-at="2023-05-01T20:22:34 EET">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="11569" started-at="2023-05-01T20:22:23 EET" finished-at="2023-05-01T20:22:34 EET">
      <class name="ZippoTest">
        <test-method status="PASS" signature="Setup()[pri:0, instance:ZippoTest@2bbf4b8b]" name="Setup" is-config="true" duration-ms="3" started-at="2023-05-01T20:22:27 EET" finished-at="2023-05-01T20:22:27 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="PASS" signature="bodyArrayHasSizeTest()[pri:0, instance:ZippoTest@2bbf4b8b]" name="bodyArrayHasSizeTest" duration-ms="267" started-at="2023-05-01T20:22:27 EET" finished-at="2023-05-01T20:22:27 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bodyArrayHasSizeTest -->
        <test-method status="PASS" signature="checkCountryInResponseBody()[pri:0, instance:ZippoTest@2bbf4b8b]" name="checkCountryInResponseBody" duration-ms="207" started-at="2023-05-01T20:22:27 EET" finished-at="2023-05-01T20:22:27 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCountryInResponseBody -->
        <test-method status="PASS" signature="checkHasItemy()[pri:0, instance:ZippoTest@2bbf4b8b]" name="checkHasItemy" duration-ms="232" started-at="2023-05-01T20:22:27 EET" finished-at="2023-05-01T20:22:28 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHasItemy -->
        <test-method status="PASS" signature="checkStateInResponseBody()[pri:0, instance:ZippoTest@2bbf4b8b]" name="checkStateInResponseBody" duration-ms="242" started-at="2023-05-01T20:22:28 EET" finished-at="2023-05-01T20:22:28 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStateInResponseBody -->
        <test-method status="PASS" signature="combiningTest()[pri:0, instance:ZippoTest@2bbf4b8b]" name="combiningTest" duration-ms="224" started-at="2023-05-01T20:22:28 EET" finished-at="2023-05-01T20:22:28 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- combiningTest -->
        <test-method status="PASS" signature="contentTypeTest()[pri:0, instance:ZippoTest@2bbf4b8b]" name="contentTypeTest" duration-ms="202" started-at="2023-05-01T20:22:28 EET" finished-at="2023-05-01T20:22:28 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contentTypeTest -->
        <test-method status="PASS" signature="extractJsonAll_POJO()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractJsonAll_POJO" duration-ms="260" started-at="2023-05-01T20:22:28 EET" finished-at="2023-05-01T20:22:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractJsonAll_POJO -->
        <test-method status="PASS" signature="extractPOJO_Soru()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractPOJO_Soru" duration-ms="208" started-at="2023-05-01T20:22:29 EET" finished-at="2023-05-01T20:22:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPOJO_Soru -->
        <test-method status="PASS" signature="extractingJsonPath()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractingJsonPath" duration-ms="198" started-at="2023-05-01T20:22:29 EET" finished-at="2023-05-01T20:22:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractingJsonPath -->
        <test-method status="PASS" signature="extractingJsonPath1()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractingJsonPath1" duration-ms="198" started-at="2023-05-01T20:22:29 EET" finished-at="2023-05-01T20:22:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractingJsonPath1 -->
        <test-method status="PASS" signature="extractingJsonPath2()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractingJsonPath2" duration-ms="399" started-at="2023-05-01T20:22:29 EET" finished-at="2023-05-01T20:22:30 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractingJsonPath2 -->
        <test-method status="PASS" signature="extractingJsonPath3()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractingJsonPath3" duration-ms="298" started-at="2023-05-01T20:22:30 EET" finished-at="2023-05-01T20:22:30 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractingJsonPath3 -->
        <test-method status="PASS" signature="extractingJsonPath4()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractingJsonPath4" duration-ms="285" started-at="2023-05-01T20:22:30 EET" finished-at="2023-05-01T20:22:30 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractingJsonPath4 -->
        <test-method status="FAIL" signature="extractingJsonPathResponsAll()[pri:0, instance:ZippoTest@2bbf4b8b]" name="extractingJsonPathResponsAll" duration-ms="283" started-at="2023-05-01T20:22:30 EET" finished-at="2023-05-01T20:22:30 EET">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at ZippoTest.extractingJsonPathResponsAll(ZippoTest.java:379)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractingJsonPathResponsAll -->
        <test-method status="PASS" signature="pathParamTest()[pri:0, instance:ZippoTest@2bbf4b8b]" name="pathParamTest" duration-ms="195" started-at="2023-05-01T20:22:30 EET" finished-at="2023-05-01T20:22:31 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pathParamTest -->
        <test-method status="PASS" signature="queryParamTest()[pri:0, instance:ZippoTest@2bbf4b8b]" name="queryParamTest" duration-ms="267" started-at="2023-05-01T20:22:31 EET" finished-at="2023-05-01T20:22:31 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryParamTest -->
        <test-method status="PASS" signature="queryParamTest2()[pri:0, instance:ZippoTest@2bbf4b8b]" name="queryParamTest2" duration-ms="2830" started-at="2023-05-01T20:22:31 EET" finished-at="2023-05-01T20:22:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryParamTest2 -->
        <test-method status="PASS" signature="requestResponseSpecification()[pri:0, instance:ZippoTest@2bbf4b8b]" name="requestResponseSpecification" duration-ms="257" started-at="2023-05-01T20:22:34 EET" finished-at="2023-05-01T20:22:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestResponseSpecification -->
        <test-method status="PASS" signature="statusCodeTest()[pri:0, instance:ZippoTest@2bbf4b8b]" name="statusCodeTest" duration-ms="182" started-at="2023-05-01T20:22:34 EET" finished-at="2023-05-01T20:22:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusCodeTest -->
        <test-method status="PASS" signature="test()[pri:0, instance:ZippoTest@2bbf4b8b]" name="test" duration-ms="0" started-at="2023-05-01T20:22:34 EET" finished-at="2023-05-01T20:22:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- ZippoTest -->
      <class name="Campus.CountryTest">
        <test-method status="PASS" signature="SetUp()[pri:0, instance:Campus.CountryTest@458c1321]" name="SetUp" is-config="true" duration-ms="2490" started-at="2023-05-01T20:22:23 EET" finished-at="2023-05-01T20:22:25 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="createCountry()[pri:0, instance:Campus.CountryTest@458c1321]" name="createCountry" duration-ms="1061" started-at="2023-05-01T20:22:25 EET" finished-at="2023-05-01T20:22:26 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCountry -->
        <test-method status="PASS" signature="createCountryNegative()[pri:0, instance:Campus.CountryTest@458c1321]" name="createCountryNegative" duration-ms="376" started-at="2023-05-01T20:22:26 EET" depends-on-methods="Campus.CountryTest.createCountry" finished-at="2023-05-01T20:22:27 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCountryNegative -->
        <test-method status="FAIL" signature="updateCountry()[pri:0, instance:Campus.CountryTest@458c1321]" name="updateCountry" duration-ms="360" started-at="2023-05-01T20:22:27 EET" depends-on-methods="Campus.CountryTest.createCountryNegative" finished-at="2023-05-01T20:22:27 EET">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Campus.CountryTest.updateCountry(CountryTest.java:144)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCountry -->
        <test-method status="SKIP" signature="deleteCountryNegative()[pri:0, instance:Campus.CountryTest@458c1321]" name="deleteCountryNegative" duration-ms="0" started-at="2023-05-01T20:22:27 EET" depends-on-methods="Campus.CountryTest.deleteCountry" finished-at="2023-05-01T20:22:27 EET">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method CountryTest.deleteCountryNegative()[pri:0, instance:Campus.CountryTest@458c1321] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method CountryTest.deleteCountryNegative()[pri:0, instance:Campus.CountryTest@458c1321] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCountryNegative -->
        <test-method status="SKIP" signature="deleteCountry()[pri:0, instance:Campus.CountryTest@458c1321]" name="deleteCountry" duration-ms="0" started-at="2023-05-01T20:22:27 EET" depends-on-methods="Campus.CountryTest.updateCountry" finished-at="2023-05-01T20:22:27 EET">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method CountryTest.deleteCountry()[pri:0, instance:Campus.CountryTest@458c1321] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method CountryTest.deleteCountry()[pri:0, instance:Campus.CountryTest@458c1321] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCountry -->
      </class> <!-- Campus.CountryTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
